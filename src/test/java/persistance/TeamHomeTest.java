package persistance;

import static org.mockito.Mockito.mock;

import org.junit.Test;

import ar.edu.unq.desapp.grupoB022015.model.Id;
import ar.edu.unq.desapp.grupoB022015.model.Team;
import ar.edu.unq.desapp.grupoB022015.model.builders.TeamBuilder;
import junit.framework.TestCase;
import persistence.TeamHome;

public class TeamHomeTest extends TestCase {

	@Test
	public void test_save(){
		TeamHome.getInstance().reset();
		
		Team team = mock(Team.class);
		TeamHome.getInstance().save(team);
		
		assertTrue (TeamHome.getInstance().all().size() == 1);
	}
	
	@Test
	public void test_existIdentifier(){
		TeamHome.getInstance().reset();
		
		// Ids are generated by the home in order from 0, i.e. first saved Team's id = 0, second 1, etc
		
		Team aTeam = TeamBuilder.anyTeam().build();
		Team anotherTeam = TeamBuilder.anyTeam().build();
		
		TeamHome.getInstance().save(aTeam);
		
		assertTrue (TeamHome.getInstance().existIdentifier(new Id(0)));
		assertFalse (TeamHome.getInstance().existIdentifier(new Id(1)));
		
		TeamHome.getInstance().save(anotherTeam);
		
		assertTrue (TeamHome.getInstance().existIdentifier(new Id(1)));
	}
	
	@Test
	public void test_get(){
		TeamHome.getInstance().reset();
		
		Team aTeam = TeamBuilder.anyTeam().build();
		Team anotherTeam = TeamBuilder.anyTeam().build();
		TeamHome.getInstance().save(aTeam);
		TeamHome.getInstance().save(anotherTeam);
		
		assertTrue(aTeam.equals(TeamHome.getInstance().get(new Id(0))));
		assertTrue(anotherTeam.equals(TeamHome.getInstance().get(new Id(1))));		
	}
}
